package com.example.orderservice.service;

import com.example.orderservice.response.parcel.ParcelResponse;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.Style;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.HorizontalAlignment;
import com.itextpdf.layout.properties.TextAlignment;
import com.itextpdf.layout.properties.UnitValue;
import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.time.LocalDateTime;

@Service
public class ParcelLabelService {

    public byte[] generateLabel(ParcelResponse parcel) throws Exception {
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PdfWriter writer = new PdfWriter(outputStream);
        PdfDocument pdf = new PdfDocument(writer);
        Document document = new Document(pdf);

        document.add(new Paragraph("Parcel Shipment Invoice")
                .setFontSize(20)
                .setBold()
                .setTextAlignment(TextAlignment.CENTER)
                .setMarginBottom(20));

        document.add(new Paragraph("QickShip Logistics Mock").setBold().setFontSize(12));
        document.add(new Paragraph("www.qickship.ro | support@qickship.ro\n").setFontSize(10).setMarginBottom(15));

        Table table = new Table(UnitValue.createPercentArray(new float[]{30, 70}))
                .useAllAvailableWidth()
                .setMarginBottom(20);

        Style labelStyle = new Style()
                .setBold()
                .setFontSize(11)
                .setBackgroundColor(ColorConstants.LIGHT_GRAY)
                .setPadding(5);

        table.addCell(new Cell().add(new Paragraph("AWB")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getAwb())));

        table.addCell(new Cell().add(new Paragraph("Size")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getSize().toString())));

        table.addCell(new Cell().add(new Paragraph("Weight")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getWeight() + " kg")));

        table.addCell(new Cell().add(new Paragraph("Fragile")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.isFragile() ? "Yes" : "No")));

        table.addCell(new Cell().add(new Paragraph("Price")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(String.format("%.2f $", parcel.getPrice()))));

        table.addCell(new Cell().add(new Paragraph("Destination")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getDestinationAddress())));

        table.addCell(new Cell().add(new Paragraph("Receiver")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getDestinationContact())));

        table.addCell(new Cell().add(new Paragraph("Phone")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getDestinationPhone())));

        table.addCell(new Cell().add(new Paragraph("Receiver Email")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getDestinationEmail())));

        table.addCell(new Cell().add(new Paragraph("Sender Email")).addStyle(labelStyle));
        table.addCell(new Cell().add(new Paragraph(parcel.getEmail())));


        document.add(table);

        Image qrCodeImage = new Image(ImageDataFactory.create(generateQRCode(parcel.getAwb())));
        qrCodeImage.setWidth(100);
        qrCodeImage.setHeight(100);
        qrCodeImage.setHorizontalAlignment(HorizontalAlignment.RIGHT);
        document.add(new Paragraph("Scan for tracking").setFontSize(10));
        document.add(qrCodeImage);

        document.add(new Paragraph("\nGenerated by QickShip â€¢ " + LocalDateTime.now())
                .setFontSize(8)
                .setTextAlignment(TextAlignment.CENTER)
                .setMarginTop(30));

        document.close();
        return outputStream.toByteArray();
    }

    private byte[] generateQRCode(String data) throws Exception {
        int width = 200;
        int height = 200;
        BitMatrix matrix = new MultiFormatWriter()
                .encode(data, BarcodeFormat.QR_CODE, width, height);

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        MatrixToImageWriter.writeToStream(matrix, "PNG", baos);
        return baos.toByteArray();
    }
}
